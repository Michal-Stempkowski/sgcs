@startuml

!include evolution.wsdi

!include core.wsdi
hide TerminalRule
hide Sentence
hide Symbol
hide RulePopulationAccessViolationError

!include grammar_statistics.wsdi
hide RuleInfo
hide RuleStatistics
hide PasiekaRuleInfo
hide PasiekaLeftSideInfo
hide PasiekaRuleStatistics
hide Fitness
hide PasiekaFitness
hide ClassicRuleInfo
hide ClassicRuleUsageInfo
hide ClassicRuleStatistics
hide StatisticsVisitor
hide ClassicFitness
hide DummyCykStatistics

package evolution {
    class EvolutionService
    EvolutionService : configuration
    EvolutionService : randomizer
    EvolutionService : selectors
    EvolutionService : operators
    EvolutionService : def __init__(self, configuration, randomizer)
    EvolutionService : run_genetic_algorithm(self, grammar_statistics, rule_population, rule_adding)

    class InvalidArityException

    class EvolutionOperator
    EvolutionOperator : arity_keyfunc(operator)
    EvolutionOperator : arity
    EvolutionOperator : apply(self, service, rule_population, *rules)
    EvolutionOperator : apply_impl(self, service, rule_population, *rules)
    EvolutionOperator : get_execution_chance(self, service)
    EvolutionOperator --> Rule: creates
    EvolutionOperator <..> EvolutionService: uses
    EvolutionOperator ..> RulePopulation: uses
    EvolutionOperator ..> InvalidArityException: raises

    class InversionOperator
    InversionOperator --|> EvolutionOperator

    class MutationOperator
    MutationOperator --|> EvolutionOperator

    class ParentMutationOperator
    ParentMutationOperator --|> MutationOperator

    class LeftChildMutationOperator
    LeftChildMutationOperator --|> MutationOperator

    class RightChildMutationOperator
    RightChildMutationOperator --|> MutationOperator

    class CrossoverOperator
    CrossoverOperator --|> EvolutionOperator

    enum EvolutionSelectorType {
        random = 0
        tournament = 1
        roulette = 2
    }

    class Selector
    Selector : type
    Selector : select(self, service, grammar_statistics, rule_population)
    Selector --> EvolutionSelectorType: uses
    Selector <..> EvolutionService: uses
    Selector ..> GrammarStatistics: uses
    Selector ..> RulePopulation: uses

    class RandomSelector
    RandomSelector --|> Selector

    class TournamentSelector
    TournamentSelector --|> Selector

    class RouletteSelector
    RouletteSelector --|> Selector
}

@enduml